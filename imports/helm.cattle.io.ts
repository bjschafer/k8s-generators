// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema HelmChart
 */
export class HelmChart extends ApiObject {
  /**
   * Returns the apiVersion and kind for "HelmChart"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'helm.cattle.io/v1',
    kind: 'HelmChart',
  }

  /**
   * Renders a Kubernetes manifest for "HelmChart".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: HelmChartProps = {}): any {
    return {
      ...HelmChart.GVK,
      ...toJson_HelmChartProps(props),
    };
  }

  /**
   * Defines a "HelmChart" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: HelmChartProps = {}) {
    super(scope, id, {
      ...HelmChart.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...HelmChart.GVK,
      ...toJson_HelmChartProps(resolved),
    };
  }
}

/**
 * @schema HelmChart
 */
export interface HelmChartProps {
  /**
   * @schema HelmChart#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema HelmChart#spec
   */
  readonly spec?: HelmChartSpec;

}

/**
 * Converts an object of type 'HelmChartProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartProps(obj: HelmChartProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_HelmChartSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpec
 */
export interface HelmChartSpec {
  /**
   * @schema HelmChartSpec#authPassCredentials
   */
  readonly authPassCredentials?: boolean;

  /**
   * @schema HelmChartSpec#authSecret
   */
  readonly authSecret?: HelmChartSpecAuthSecret;

  /**
   * @schema HelmChartSpec#backOffLimit
   */
  readonly backOffLimit?: number;

  /**
   * @schema HelmChartSpec#bootstrap
   */
  readonly bootstrap?: boolean;

  /**
   * @schema HelmChartSpec#chart
   */
  readonly chart?: string;

  /**
   * @schema HelmChartSpec#chartContent
   */
  readonly chartContent?: string;

  /**
   * @schema HelmChartSpec#createNamespace
   */
  readonly createNamespace?: boolean;

  /**
   * @schema HelmChartSpec#dockerRegistrySecret
   */
  readonly dockerRegistrySecret?: HelmChartSpecDockerRegistrySecret;

  /**
   * @schema HelmChartSpec#failurePolicy
   */
  readonly failurePolicy?: string;

  /**
   * @schema HelmChartSpec#helmVersion
   */
  readonly helmVersion?: string;

  /**
   * @schema HelmChartSpec#insecureSkipTLSVerify
   */
  readonly insecureSkipTlsVerify?: boolean;

  /**
   * @schema HelmChartSpec#jobImage
   */
  readonly jobImage?: string;

  /**
   * @schema HelmChartSpec#plainHTTP
   */
  readonly plainHttp?: boolean;

  /**
   * @schema HelmChartSpec#podSecurityContext
   */
  readonly podSecurityContext?: HelmChartSpecPodSecurityContext;

  /**
   * @schema HelmChartSpec#repo
   */
  readonly repo?: string;

  /**
   * @schema HelmChartSpec#repoCA
   */
  readonly repoCa?: string;

  /**
   * @schema HelmChartSpec#repoCAConfigMap
   */
  readonly repoCaConfigMap?: HelmChartSpecRepoCaConfigMap;

  /**
   * @schema HelmChartSpec#securityContext
   */
  readonly securityContext?: HelmChartSpecSecurityContext;

  /**
   * @schema HelmChartSpec#set
   */
  readonly set?: { [key: string]: any };

  /**
   * @schema HelmChartSpec#targetNamespace
   */
  readonly targetNamespace?: string;

  /**
   * @schema HelmChartSpec#timeout
   */
  readonly timeout?: string;

  /**
   * @schema HelmChartSpec#valuesContent
   */
  readonly valuesContent?: string;

  /**
   * @schema HelmChartSpec#version
   */
  readonly version?: string;

}

/**
 * Converts an object of type 'HelmChartSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpec(obj: HelmChartSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'authPassCredentials': obj.authPassCredentials,
    'authSecret': toJson_HelmChartSpecAuthSecret(obj.authSecret),
    'backOffLimit': obj.backOffLimit,
    'bootstrap': obj.bootstrap,
    'chart': obj.chart,
    'chartContent': obj.chartContent,
    'createNamespace': obj.createNamespace,
    'dockerRegistrySecret': toJson_HelmChartSpecDockerRegistrySecret(obj.dockerRegistrySecret),
    'failurePolicy': obj.failurePolicy,
    'helmVersion': obj.helmVersion,
    'insecureSkipTLSVerify': obj.insecureSkipTlsVerify,
    'jobImage': obj.jobImage,
    'plainHTTP': obj.plainHttp,
    'podSecurityContext': toJson_HelmChartSpecPodSecurityContext(obj.podSecurityContext),
    'repo': obj.repo,
    'repoCA': obj.repoCa,
    'repoCAConfigMap': toJson_HelmChartSpecRepoCaConfigMap(obj.repoCaConfigMap),
    'securityContext': toJson_HelmChartSpecSecurityContext(obj.securityContext),
    'set': ((obj.set) === undefined) ? undefined : (Object.entries(obj.set).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'targetNamespace': obj.targetNamespace,
    'timeout': obj.timeout,
    'valuesContent': obj.valuesContent,
    'version': obj.version,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecAuthSecret
 */
export interface HelmChartSpecAuthSecret {
  /**
   * @schema HelmChartSpecAuthSecret#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'HelmChartSpecAuthSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecAuthSecret(obj: HelmChartSpecAuthSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecDockerRegistrySecret
 */
export interface HelmChartSpecDockerRegistrySecret {
  /**
   * @schema HelmChartSpecDockerRegistrySecret#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'HelmChartSpecDockerRegistrySecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecDockerRegistrySecret(obj: HelmChartSpecDockerRegistrySecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecPodSecurityContext
 */
export interface HelmChartSpecPodSecurityContext {
  /**
   * @schema HelmChartSpecPodSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: HelmChartSpecPodSecurityContextAppArmorProfile;

  /**
   * @schema HelmChartSpecPodSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * @schema HelmChartSpecPodSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * @schema HelmChartSpecPodSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema HelmChartSpecPodSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema HelmChartSpecPodSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema HelmChartSpecPodSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: HelmChartSpecPodSecurityContextSeLinuxOptions;

  /**
   * @schema HelmChartSpecPodSecurityContext#seccompProfile
   */
  readonly seccompProfile?: HelmChartSpecPodSecurityContextSeccompProfile;

  /**
   * @schema HelmChartSpecPodSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * @schema HelmChartSpecPodSecurityContext#supplementalGroupsPolicy
   */
  readonly supplementalGroupsPolicy?: string;

  /**
   * @schema HelmChartSpecPodSecurityContext#sysctls
   */
  readonly sysctls?: HelmChartSpecPodSecurityContextSysctls[];

  /**
   * @schema HelmChartSpecPodSecurityContext#windowsOptions
   */
  readonly windowsOptions?: HelmChartSpecPodSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'HelmChartSpecPodSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecPodSecurityContext(obj: HelmChartSpecPodSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appArmorProfile': toJson_HelmChartSpecPodSecurityContextAppArmorProfile(obj.appArmorProfile),
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_HelmChartSpecPodSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_HelmChartSpecPodSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'supplementalGroupsPolicy': obj.supplementalGroupsPolicy,
    'sysctls': obj.sysctls?.map(y => toJson_HelmChartSpecPodSecurityContextSysctls(y)),
    'windowsOptions': toJson_HelmChartSpecPodSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecRepoCaConfigMap
 */
export interface HelmChartSpecRepoCaConfigMap {
  /**
   * @schema HelmChartSpecRepoCaConfigMap#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'HelmChartSpecRepoCaConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecRepoCaConfigMap(obj: HelmChartSpecRepoCaConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecSecurityContext
 */
export interface HelmChartSpecSecurityContext {
  /**
   * @schema HelmChartSpecSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * @schema HelmChartSpecSecurityContext#appArmorProfile
   */
  readonly appArmorProfile?: HelmChartSpecSecurityContextAppArmorProfile;

  /**
   * @schema HelmChartSpecSecurityContext#capabilities
   */
  readonly capabilities?: HelmChartSpecSecurityContextCapabilities;

  /**
   * @schema HelmChartSpecSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * @schema HelmChartSpecSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * @schema HelmChartSpecSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * @schema HelmChartSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * @schema HelmChartSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * @schema HelmChartSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * @schema HelmChartSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: HelmChartSpecSecurityContextSeLinuxOptions;

  /**
   * @schema HelmChartSpecSecurityContext#seccompProfile
   */
  readonly seccompProfile?: HelmChartSpecSecurityContextSeccompProfile;

  /**
   * @schema HelmChartSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: HelmChartSpecSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'HelmChartSpecSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecSecurityContext(obj: HelmChartSpecSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'appArmorProfile': toJson_HelmChartSpecSecurityContextAppArmorProfile(obj.appArmorProfile),
    'capabilities': toJson_HelmChartSpecSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_HelmChartSpecSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_HelmChartSpecSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_HelmChartSpecSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecPodSecurityContextAppArmorProfile
 */
export interface HelmChartSpecPodSecurityContextAppArmorProfile {
  /**
   * @schema HelmChartSpecPodSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema HelmChartSpecPodSecurityContextAppArmorProfile#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'HelmChartSpecPodSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecPodSecurityContextAppArmorProfile(obj: HelmChartSpecPodSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecPodSecurityContextSeLinuxOptions
 */
export interface HelmChartSpecPodSecurityContextSeLinuxOptions {
  /**
   * @schema HelmChartSpecPodSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema HelmChartSpecPodSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema HelmChartSpecPodSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema HelmChartSpecPodSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'HelmChartSpecPodSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecPodSecurityContextSeLinuxOptions(obj: HelmChartSpecPodSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecPodSecurityContextSeccompProfile
 */
export interface HelmChartSpecPodSecurityContextSeccompProfile {
  /**
   * @schema HelmChartSpecPodSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema HelmChartSpecPodSecurityContextSeccompProfile#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'HelmChartSpecPodSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecPodSecurityContextSeccompProfile(obj: HelmChartSpecPodSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecPodSecurityContextSysctls
 */
export interface HelmChartSpecPodSecurityContextSysctls {
  /**
   * @schema HelmChartSpecPodSecurityContextSysctls#name
   */
  readonly name?: string;

  /**
   * @schema HelmChartSpecPodSecurityContextSysctls#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'HelmChartSpecPodSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecPodSecurityContextSysctls(obj: HelmChartSpecPodSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecPodSecurityContextWindowsOptions
 */
export interface HelmChartSpecPodSecurityContextWindowsOptions {
  /**
   * @schema HelmChartSpecPodSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema HelmChartSpecPodSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema HelmChartSpecPodSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema HelmChartSpecPodSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'HelmChartSpecPodSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecPodSecurityContextWindowsOptions(obj: HelmChartSpecPodSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecSecurityContextAppArmorProfile
 */
export interface HelmChartSpecSecurityContextAppArmorProfile {
  /**
   * @schema HelmChartSpecSecurityContextAppArmorProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema HelmChartSpecSecurityContextAppArmorProfile#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'HelmChartSpecSecurityContextAppArmorProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecSecurityContextAppArmorProfile(obj: HelmChartSpecSecurityContextAppArmorProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecSecurityContextCapabilities
 */
export interface HelmChartSpecSecurityContextCapabilities {
  /**
   * @schema HelmChartSpecSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * @schema HelmChartSpecSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'HelmChartSpecSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecSecurityContextCapabilities(obj: HelmChartSpecSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecSecurityContextSeLinuxOptions
 */
export interface HelmChartSpecSecurityContextSeLinuxOptions {
  /**
   * @schema HelmChartSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * @schema HelmChartSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * @schema HelmChartSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * @schema HelmChartSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'HelmChartSpecSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecSecurityContextSeLinuxOptions(obj: HelmChartSpecSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecSecurityContextSeccompProfile
 */
export interface HelmChartSpecSecurityContextSeccompProfile {
  /**
   * @schema HelmChartSpecSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * @schema HelmChartSpecSecurityContextSeccompProfile#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'HelmChartSpecSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecSecurityContextSeccompProfile(obj: HelmChartSpecSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartSpecSecurityContextWindowsOptions
 */
export interface HelmChartSpecSecurityContextWindowsOptions {
  /**
   * @schema HelmChartSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * @schema HelmChartSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * @schema HelmChartSpecSecurityContextWindowsOptions#hostProcess
   */
  readonly hostProcess?: boolean;

  /**
   * @schema HelmChartSpecSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'HelmChartSpecSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartSpecSecurityContextWindowsOptions(obj: HelmChartSpecSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'hostProcess': obj.hostProcess,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema HelmChartConfig
 */
export class HelmChartConfig extends ApiObject {
  /**
   * Returns the apiVersion and kind for "HelmChartConfig"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'helm.cattle.io/v1',
    kind: 'HelmChartConfig',
  }

  /**
   * Renders a Kubernetes manifest for "HelmChartConfig".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: HelmChartConfigProps = {}): any {
    return {
      ...HelmChartConfig.GVK,
      ...toJson_HelmChartConfigProps(props),
    };
  }

  /**
   * Defines a "HelmChartConfig" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: HelmChartConfigProps = {}) {
    super(scope, id, {
      ...HelmChartConfig.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...HelmChartConfig.GVK,
      ...toJson_HelmChartConfigProps(resolved),
    };
  }
}

/**
 * @schema HelmChartConfig
 */
export interface HelmChartConfigProps {
  /**
   * @schema HelmChartConfig#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema HelmChartConfig#spec
   */
  readonly spec?: HelmChartConfigSpec;

}

/**
 * Converts an object of type 'HelmChartConfigProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartConfigProps(obj: HelmChartConfigProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_HelmChartConfigSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema HelmChartConfigSpec
 */
export interface HelmChartConfigSpec {
  /**
   * @schema HelmChartConfigSpec#failurePolicy
   */
  readonly failurePolicy?: string;

  /**
   * @schema HelmChartConfigSpec#valuesContent
   */
  readonly valuesContent?: string;

}

/**
 * Converts an object of type 'HelmChartConfigSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_HelmChartConfigSpec(obj: HelmChartConfigSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'failurePolicy': obj.failurePolicy,
    'valuesContent': obj.valuesContent,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


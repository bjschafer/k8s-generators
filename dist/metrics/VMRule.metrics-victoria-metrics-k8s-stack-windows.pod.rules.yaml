apiVersion: operator.victoriametrics.com/v1beta1
kind: VMRule
metadata:
  labels:
    alerts.cmdcentral.xyz/kind: metrics
    app: victoria-metrics-k8s-stack
    app.kubernetes.io/instance: metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: victoria-metrics-k8s-stack
    app.kubernetes.io/version: v0.28.1
    helm.sh/chart: victoria-metrics-k8s-stack-0.41.3
  name: metrics-victoria-metrics-k8s-stack-windows.pod.rules
  namespace: metrics
spec:
  groups:
    - name: windows.pod.rules
      params: {}
      rules:
        - annotations: {}
          expr: windows_container_available{job="kubernetes-windows-exporter", container_id != ""} * on (container_id,cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by (container,container_id,pod,namespace,cluster)
          labels: {}
          record: windows_pod_container_available
        - annotations: {}
          expr: windows_container_cpu_usage_seconds_total{job="kubernetes-windows-exporter", container_id != ""} * on (container_id,cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by (container,container_id,pod,namespace,cluster)
          labels: {}
          record: windows_container_total_runtime
        - annotations: {}
          expr: windows_container_memory_usage_commit_bytes{job="kubernetes-windows-exporter", container_id != ""} * on (container_id,cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by (container,container_id,pod,namespace,cluster)
          labels: {}
          record: windows_container_memory_usage
        - annotations: {}
          expr: windows_container_memory_usage_private_working_set_bytes{job="kubernetes-windows-exporter", container_id != ""} * on (container_id,cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by (container,container_id,pod,namespace,cluster)
          labels: {}
          record: windows_container_private_working_set_usage
        - annotations: {}
          expr: windows_container_network_receive_bytes_total{job="kubernetes-windows-exporter", container_id != ""} * on (container_id,cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by (container,container_id,pod,namespace,cluster)
          labels: {}
          record: windows_container_network_received_bytes_total
        - annotations: {}
          expr: windows_container_network_transmit_bytes_total{job="kubernetes-windows-exporter", container_id != ""} * on (container_id,cluster) group_left(container, pod, namespace) max(kube_pod_container_info{job="kube-state-metrics", container_id != ""}) by (container,container_id,pod,namespace,cluster)
          labels: {}
          record: windows_container_network_transmitted_bytes_total
        - annotations: {}
          expr: |-
            max by (namespace,pod,container,cluster) (
              kube_pod_container_resource_requests{resource="memory",job="kube-state-metrics"}
            ) * on (container,pod,namespace,cluster) (windows_pod_container_available)
          labels: {}
          record: kube_pod_windows_container_resource_memory_request
        - annotations: {}
          expr: kube_pod_container_resource_limits{resource="memory",job="kube-state-metrics"} * on (container,pod,namespace,cluster) (windows_pod_container_available)
          labels: {}
          record: kube_pod_windows_container_resource_memory_limit
        - annotations: {}
          expr: |-
            max by (namespace,pod,container,cluster) (
              kube_pod_container_resource_requests{resource="cpu",job="kube-state-metrics"}
            ) * on (container,pod,namespace,cluster) (windows_pod_container_available)
          labels: {}
          record: kube_pod_windows_container_resource_cpu_cores_request
        - annotations: {}
          expr: kube_pod_container_resource_limits{resource="cpu",job="kube-state-metrics"} * on (container,pod,namespace,cluster) (windows_pod_container_available)
          labels: {}
          record: kube_pod_windows_container_resource_cpu_cores_limit
        - annotations: {}
          expr: |-
            sum by (namespace,pod,container,cluster) (
              rate(windows_container_total_runtime{}[5m])
            )
          labels: {}
          record: namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: generators
    app.kubernetes.io/name: authentik
  name: authentik-server
  namespace: authentik
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 2
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: authentik-server-authentik-server-deployment-c8cc40e6
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: authentik-server
        cdk8s.io/metadata.addr: authentik-server-authentik-server-deployment-c8cc40e6
    spec:
      automountServiceAccountToken: true
      containers:
        - args:
            - server
          env:
            - name: AUTHENTIK_AVATARS
              value: gravatar
            - name: AUTHENTIK_EMAIL__FROM
              value: login@cmdcentral.xyz
            - name: AUTHENTIK_EMAIL__HOST
              value: smtp.fastmail.com
            - name: AUTHENTIK_EMAIL__PORT
              value: "465"
            - name: AUTHENTIK_EMAIL__TIMEOUT
              value: "30"
            - name: AUTHENTIK_EMAIL__USE_SSL
              value: "true"
            - name: AUTHENTIK_EMAIL__USE_TLS
              value: "false"
            - name: AUTHENTIK_EMAIL__USERNAME
              value: braxton@cmdcentral.xyz
            - name: AUTHENTIK_ERROR_REPORTING__ENABLED
              value: "false"
            - name: AUTHENTIK_ERROR_REPORTING__ENVIRONMENT
              value: k8s
            - name: AUTHENTIK_ERROR_REPORTING__SEND_PII
              value: "false"
            - name: AUTHENTIK_EVENTS__CONTEXT_PROCESSORS__GEOIP
              value: /geoip/GeoLite2-City.mmdb
            - name: AUTHENTIK_LOG_LEVEL
              value: info
            - name: AUTHENTIK_OUTPOSTS__CONTAINER_IMAGE_BASE
              value: ghcr.io/goauthentik/%(type)s:%(version)s
            - name: AUTHENTIK_POSTGRESQL__HOST
              value: prod.postgres.svc.cluster.local
            - name: AUTHENTIK_POSTGRESQL__NAME
              value: authentik
            - name: AUTHENTIK_POSTGRESQL__PORT
              value: "5432"
            - name: AUTHENTIK_POSTGRESQL__USER
              value: authentik
            - name: AUTHENTIK_REDIS__HOST
              value: authentik-valkey-master
            - name: AUTHENTIK_REDIS__PASSWORD
              valueFrom:
                secretKeyRef:
                  key: valkey-password
                  name: authentik-valkey
            - name: AUTHENTIK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: AUTHENTIK_SECRET_KEY
                  name: creds
            - name: AUTHENTIK_POSTGRESQL__PASSWORD
              valueFrom:
                secretKeyRef:
                  key: AUTHENTIK_POSTGRESQL__PASSWORD
                  name: creds
            - name: AUTHENTIK_EMAIL__PASSWORD
              valueFrom:
                secretKeyRef:
                  key: AUTHENTIK_EMAIL__PASSWORD
                  name: creds
          image: ghcr.io/goauthentik/server:2025.6.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/health/live/
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
          name: authentik-server
          ports:
            - containerPort: 9000
            - containerPort: 9443
            - containerPort: 9300
              name: metrics
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/health/ready/
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            limits:
              cpu: 1200m
              memory: 1024Mi
            requests:
              cpu: 50m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
      dnsPolicy: ClusterFirst
      hostNetwork: false
      nodeSelector:
        kubernetes.io/arch: amd64
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: false
      serviceAccountName: authentik
      setHostnameAsFQDN: false
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 30
